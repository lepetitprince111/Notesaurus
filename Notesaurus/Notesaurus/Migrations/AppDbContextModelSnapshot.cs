// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Notesaurus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Notesaurus.FuturFonc.Grades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutOf")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Notesaurus.Model.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NbGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Section")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Teacher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Notesaurus.Model.Notes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId");

                    b.ToTable("NoteS");
                });

            modelBuilder.Entity("Notesaurus.Model.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Notesaurus.FuturFonc.Grades", b =>
                {
                    b.HasOne("Notesaurus.Model.Classes", null)
                        .WithMany("Notes")
                        .HasForeignKey("ClassesId");
                });

            modelBuilder.Entity("Notesaurus.Model.Classes", b =>
                {
                    b.HasOne("Notesaurus.Model.Semester", null)
                        .WithMany("SemesterClasses")
                        .HasForeignKey("SemesterId");
                });

            modelBuilder.Entity("Notesaurus.Model.Notes", b =>
                {
                    b.HasOne("Notesaurus.Model.Classes", null)
                        .WithMany("Note")
                        .HasForeignKey("ClassesId");
                });

            modelBuilder.Entity("Notesaurus.Model.Classes", b =>
                {
                    b.Navigation("Note");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Notesaurus.Model.Semester", b =>
                {
                    b.Navigation("SemesterClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
